name: tests

on:
  pull_request:
  push:
    branches:
      - master
    tags:

env:
  RUST_BACKTRACE: full
  BOTAN_VERSION: 2.13.0
  PREFIX: /usr

jobs:
  test-unix-stable:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: Test on stable toolchain
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - if: "startsWith(matrix.os, 'windows')"
        run: git config --global core.autocrlf false
      - uses: actions/checkout@v1
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            default: true
      - name: Install dependencies
        if: "!startsWith(matrix.os, 'windows')"
        run: ./ci/install.sh
      - name: Install dependencies
        if: "startsWith(matrix.os, 'windows')"
        env:
          GIT_REDIRECT_STDERR: '2>&1'
        shell: powershell
        run: |
          $Env:PREFIX = ($PWD -join 'botan-install').Replace('\', '/')
          $Env:Path += "$Env:PREFIX/lib"
          $Env:TARGET = "x86_64-pc-windows-msvc"
          ./ci/install.ps1
          New-Item -ItemType Directory -Force -Path '.cargo'
          Write-Output @"
          [target.$Env:TARGET.botan-2]
          rustc-link-search = ["native=${Env:PREFIX}/lib"]
          rustc-link-lib = ["static=botan-2"]
          "@ | Out-File -Append -Encoding UTF8 -LiteralPath .cargo\config
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose -- --nocapture

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      CODECOV_TOKEN: 79f7256d-b5a9-4843-923f-43dceef2fdc1
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests
    steps:
      - uses: actions/checkout@v1
      - name: Install rust nightly
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: nightly
            override: true
      - name: Build program
        run: |
          ./ci/install.sh
          cargo build --verbose
      - name: Run tests
        run: |
          cargo test --verbose -- --nocapture
          # coverage
          curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
          zip -0 ccov.zip `find . \( -name "enprot*.gc*" \) -print`;
          ./grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info;
          bash <(curl -s https://codecov.io/bash) -f lcov.info;

  check-format:
    name: Check code format
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v1
      - name: Validate code format
        run: cargo fmt -- --check $(find src -name '*.rs')

